用ES6+Vue+webpack写的一个项目,在Chrome中一切正常，但是在ie11中进行操作时（即请求后台接口），后台API返回数据后页面并没有更新，
实际上操作已经成功了，但是只能手动刷新页面能正常显示操作后的结果，这是为什么？进行所有操作都会这样。

出现问题的原因
在 IE11 中，如果 GET 请求相同的 URL ，浏览器默认会使用之前的缓存数据，而不是重新请求接口

一、解决的方式

针对 IE 浏览器，在每个请求末尾都添加一个时间戳，保证每个请求都是独立的即可
因为其他浏览器不存在此问题，所以添加时对浏览器进行判断，只为 IE 添加

if (window.ActiveXObject || 'ActiveXObject' in window) {
  options.url = `${options.url}?${new Date().getTime()}`
}

二、解决的方式

IE浏览器第一次发请求没有问题,再发送请求时，当参数一样时，浏览器会直接使用缓存数据. 导致页面 还是原来的页面
所以在axios 请求头 添加时间戳

参考文档：https://blog.csdn.net/zyq19930325/article/details/88551300

const service = axios.create({
  // api的base_url
  baseURL: process.env.BASE_API
  // timeout: 30000 // request timeout
})
// request拦截器
service.interceptors.request.use(config => {
  // Do something before request is sent
  if (!localStorage.getItem('accessToken')) {
    config.headers.Authorization = 'Basic dnVlOnZ1ZQ=='
  } else {
    config.headers.Authorization = 'Bearer ' + localStorage.getItem('accessToken')
  }
  if (config.headers.Authorization === 'Basic dnVlOnZ1ZQ==' && window.location.hash !== '#/') {
    if (window.location.hash !== '#/retrievePassword') {
      Message.error('凭证过期，请重新登录！')
      router.replace('/')
      location.reload()
    }
  }
  // 时间戳
  if (config.method === 'post') {
    config.data = {
      ...config.data,
      t: Date.parse(new Date()) / 1000
    }
  } else if (config.method === 'get') {
    config.params = {
      t: Date.parse(new Date()) / 1000,
      ...config.params
    }
  }
  return config
}, error => {
  // Do something with request error
  // console.log('request拦截器1', error) // for debug
  Promise.reject(error)
})

三、解决方式
原文：https://blog.csdn.net/lyn1772671980/article/details/82150393

【问题描述】页面进行删除数据操作后，重新获取列表，实际操作成功，ie11中列表不刷新，删除的数据依旧在

【问题分析】F12打开IE11的控制面板，查看请求‘已接收’后的数据来源，显示“来自缓存”，如下图，ie浏览器会对相同请求的ajax,进行缓存,当你删除数据后,在调用同样的接口,ie不会刷新,只会把第一次请求该接口的数据缓存拿出来，所以页面数据依旧在，视图不更新

【解决办法】给请求加上时间戳，浏览器会检测到请求不同后，就会重新加载列表。代码如下：

import instance from './index';
const preUrlPath = '/systemAdmin';
const request ={
  r:params =>{
     params.data = new Data().getTime();
     return instance.get(`${preUrlPath}/listUser`,{params})
  }
}


