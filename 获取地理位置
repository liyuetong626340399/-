//获取地理位置(经度、纬度)
//方法一：H5（适用于pc端和iphone）
        if (window.navigator.geolocation) {
            navigator.geolocation.getCurrentPosition( // 该函数有如下三个参数
                function (pos) { // 如果成果则执行该回调函数
                    latitude = pos.coords.latitude;
                    longitude = pos.coords.longitude;
                    _self.userDetails();
                }, function (err) { // 如果失败则执行该回调函数
                }, { // 附带参数
                    enableHighAccuracy: false, // 提高精度(耗费资源)
                    timeout: 3000, // 超过timeout则调用失败的回调函数
                    maximumAge: 1000 // 获取到的地理信息的有效期，超过有效期则重新获取一次位置信息
                }
            );
        } else {
            alert("你的浏览器不支持定位!");
        }
 //注：执行条件
   // 1.getcurrentposition()和watchposition()不再工作在不安全的根源。要使用此功能，您应该考虑将应用程序切换到安全源，
   //2.鉴于该特性可能侵犯用户的隐私，除非用户同意，否则用户位置信息是不可用的。
 
 //方法二：腾讯前端定位（适用于安卓），用法详见：http://lbs.qq.com/tool/component-geolocation.html  
          HTML：
          <iframe id="geoPage" width=0 height=0 frameborder=0  style="display:none;" scrolling="no"
            src="https://apis.map.qq.com/tools/geolocation?key=OB4BZ-D4W3U-B7VVO-4PJWW-6TKDJ-WPB77&referer=myapp">
          </iframe>
          js：
                 window.addEventListener('message', function (event) {
                        // 接收位置信息
                        var loc = event.data;
                        latitude = loc.lat;
                        longitude = loc.lng;
                        console.log(event);
                        _self.userDetails();
                    }, false);
                    
               //注：定位组件在首次定位成功 或 首次定位失败后，还会继续尝试定位，如果后续获取到精度更高的位置信息，
                   //还会继续触发父页面接收定位信息的message事件。业务层请勿在回调函数里直接使用var map = new qq.maps.Map() 
                   //否则有可能导致页面创建出多个地图对象。
                   //但是会执行2次  
                   
   js统一写法：               
        var loaded = true;
        if (window.navigator.geolocation) {
            navigator.geolocation.getCurrentPosition( // 该函数有如下三个参数
                function (pos) { // 如果成果则执行该回调函数
                    latitude = pos.coords.latitude;
                    longitude = pos.coords.longitude;
                    _self.userDetails(); //调用的函数
                }, function (err) { // 如果失败则执行该回调函数
                    if(loaded == true){
                       window.addEventListener('message', function (event) {
                           // 接收位置信息
                           var loc = event.data;
                           latitude = loc.lat;
                           longitude = loc.lng;
                           _self.userDetails(); //调用的函数
                           loaded = false;
                        }, false);
                    }
                }, { // 附带参数
                    enableHighAccuracy: false, // 提高精度(耗费资源)
                    timeout: 3000, // 超过timeout则调用失败的回调函数
                    maximumAge: 1000 // 获取到的地理信息的有效期，超过有效期则重新获取一次位置信息
                }
            );
        } else {
            alert("你的浏览器不支持定位!");
        }
           
                   
              
